---
- name: Create task to run a PS script (System User)
  win_scheduled_task:
    name: ansible_script_task
    description: Run a PowerShell script
    actions:
      - path: cmd.exe
        arguments: /c powershell.exe -File C:\temp\{{ script }} > c:\temp\{{ script }}_output.txt 2>c:\temp\{{ script }}_err_output.txt
      - path: cmd.exe
        arguments: /c schtasks.exe /Delete /TN "ansible_script_task" /F
    triggers:
      - type: registration
    username: SYSTEM
  when: schtask_sysuser == "enabled"

- name: Create task to run a PS script (Service Account)
  win_scheduled_task:
    name: ansible_script_task
    description: Run a PowerShell script
    actions:
      - path: cmd.exe
        arguments: /c powershell.exe -File C:\temp\{{ script }} > c:\temp\{{ script }}_output.txt 2>c:\temp\{{ script }}_err_output.txt
      - path: cmd.exe
        arguments: /c schtasks.exe /Delete /TN "ansible_script_task" /F
    triggers:
      - type: registration
  when: schtask_sysuser == "disabled"

- name: Wait for script to complete
  win_scheduled_task_stat:
    name: ansible_script_task
  register: task_stat
  until: (task_stat.state is defined and task_stat.state.status != "TASK_STATE_RUNNING") or (task_stat.task_exists == False)
  retries: "{{ retryval }}"
  delay: 10

- name: Output handling
  block:
    - name: Read std output
      ansible.builtin.slurp:
        src: c:\temp\{{ script }}_output.txt
      register: output_encoded

    - name: Set fact with std output
      ansible.builtin.set_fact:
        output: "{{ output_encoded.content | b64decode }}"

    - name: Read std error output
      ansible.builtin.slurp:
        src: c:\temp\{{ script }}_err_output.txt
      register: err_output_encoded

    - name: Set fact with err output
      ansible.builtin.set_fact:
        err_output: "{{ err_output_encoded.content | b64decode }}"

    - name: Display output
      ansible.builtin.debug:
        var: output

    - name: Display err output
      ansible.builtin.debug:
        var: err_output

    - name: Clean up created files
      win_file:
        path: "{{ item }}"
        state: absent
      loop:
        - c:\temp\{{ script }}_output.txt
        - c:\temp\{{ script }}_err_output.txt
  ignore_errors: true

